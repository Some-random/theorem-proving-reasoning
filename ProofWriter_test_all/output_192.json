{
    "input": "Textual context: Charlie is cold. Charlie is rough. Erin is not big. Erin is blue. Erin is cold. Erin is furry. Erin is red. Erin is rough. Erin is smart. Fiona is big. Fiona is cold. Harry is blue. Harry is red. Harry is smart. If someone is blue then they are rough. Smart people are furry. All big people are blue. All furry people are red. All rough people are smart.\nQuestion: Based on the above information, is the following statement true, false, or unknown? Fiona is rough.",
    "input_tokens": 2772,
    "output": "universe u\n\nconstant obj : Type u\n\nconstant Charlie : obj\nconstant Erin : obj\nconstant Fiona : obj\nconstant Harry : obj\n\nconstant Cold : obj → Prop\nconstant Rough : obj → Prop\nconstant Big : obj → Prop\nconstant Blue : obj → Prop\nconstant Furry : obj → Prop\nconstant Red : obj → Prop\nconstant Smart : obj → Prop\n\naxiom A1 : Cold Charlie\naxiom A2 : Rough Charlie\naxiom A3 : ¬ Big Erin\naxiom A4 : Blue Erin\naxiom A5 : Cold Erin\naxiom A6 : Furry Erin\naxiom A7 : Red Erin\naxiom A8 : Rough Erin\naxiom A9 : Smart Erin\naxiom A10 : Big Fiona\naxiom A11 : Cold Fiona\naxiom A12 : Blue Harry\naxiom A13 : Red Harry\naxiom A14 : Smart Harry\n\n-- Rule R1: If someone is blue then they are rough\naxiom R1 : ∀ x : obj, Blue x → Rough x\n\n-- Rule R2: Smart people are furry\naxiom R2 : ∀ x : obj, Smart x → Furry x\n\n-- Rule R3: All big people are blue\naxiom R3 : ∀ x : obj, Big x → Blue x\n\n-- Rule R4: All furry people are red\naxiom R4 : ∀ x : obj, Furry x → Red x\n\n-- Rule R5: All rough people are smart\naxiom R5 : ∀ x : obj, Rough x → Smart x\n\ntheorem fiona_is_rough : Rough Fiona :=\nbegin\n  apply R1,\n  apply R3,\n  exact A10,\nend\n\n-- Looks like the theorem can be proven in Lean.\n-- So let's try to prove the negation of the theorem, which is Fiona is not Rough\n\ntheorem not_rough_Fiona : ¬ Rough Fiona :=\nbegin\n  have H1 : Big Fiona := A10,\n  have H2 : Blue Fiona := R3 Fiona H1,\n  have H3 : Rough Fiona := R1 Fiona H2,\n  contradiction,\n  sorry,\nend\n\n-- The negation of the theorem can not be proven in Lean. So\n-- The answer is True",
    "output_tokens": 475,
    "pred_answer": "A",
    "gt_answer": "A",
    "problem_id": 192
}