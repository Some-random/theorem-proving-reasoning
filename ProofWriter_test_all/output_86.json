{
    "input": "Textual context: The bald eagle is green. The bald eagle is round. The bald eagle is young. The bald eagle needs the lion. The cat is green. The cat is kind. The cat does not need the bald eagle. The lion chases the bald eagle. The lion chases the tiger. The lion is round. The lion needs the bald eagle. The lion visits the bald eagle. The lion visits the cat. The tiger is not blue. The tiger is not green. The tiger is young. If someone visits the tiger then the tiger visits the lion. If someone is kind and blue then they visit the cat. If someone is green then they visit the bald eagle. If someone needs the tiger then they visit the tiger. If someone needs the tiger and the tiger needs the cat then the tiger needs the lion. If someone visits the lion then they need the tiger. If the tiger chases the bald eagle then the bald eagle is green. If the bald eagle is young then the bald eagle needs the tiger.\nQuestion: Based on the above information, is the following statement true, false, or unknown? The tiger does not visit the lion.",
    "input_tokens": 2892,
    "output": "universe u\n\nconstant obj : Type u\n\nconstant BaldEagle : obj\nconstant Cat : obj\nconstant Lion : obj\nconstant Tiger : obj\n\nconstant Green : obj → Prop\nconstant Round : obj → Prop\nconstant Young : obj → Prop\nconstant Needs : obj → obj → Prop\nconstant Chases : obj → obj → Prop\nconstant Visits : obj → obj → Prop\nconstant Kind : obj → Prop\nconstant Blue : obj → Prop\n\naxiom A1 : Green BaldEagle\naxiom A2 : Round BaldEagle\naxiom A3 : Young BaldEagle\naxiom A4 : Needs BaldEagle Lion\naxiom A5 : Green Cat\naxiom A6 : Kind Cat\naxiom A7 : ¬ Needs Cat BaldEagle\naxiom A8 : Chases Lion BaldEagle\naxiom A9 : Chases Lion Tiger\naxiom A10 : Round Lion\naxiom A11 : Needs Lion BaldEagle\naxiom A12 : Visits Lion BaldEagle\naxiom A13 : Visits Lion Cat\naxiom A14 : ¬ Blue Tiger\naxiom A15 : ¬ Green Tiger\naxiom A16 : Young Tiger\n\n-- Rule R1: If someone visits the tiger then the tiger visits the lion\naxiom R1 : ∀ x : obj, Visits x Tiger → Visits Tiger Lion\n\n-- Rule R2: If someone is kind and blue then they visit the cat\naxiom R2 : ∀ x : obj, Kind x ∧ Blue x → Visits x Cat\n\n-- Rule R3: If someone is green then they visit the bald eagle\naxiom R3 : ∀ x : obj, Green x → Visits x BaldEagle\n\n-- Rule R4: If someone needs the tiger then they visit the tiger\naxiom R4 : ∀ x : obj, Needs x Tiger → Visits x Tiger\n\n-- Rule R5: If someone needs the tiger and the tiger needs the cat then the tiger needs the lion\naxiom R5 : ∀ x : obj, Needs x Tiger ∧ Needs Tiger Cat → Needs Tiger Lion\n\n-- Rule R6: If someone visits the lion then they need the tiger\naxiom R6 : ∀ x : obj, Visits x Lion → Needs x Tiger\n\n-- Rule R7: If the tiger chases the bald eagle then the bald eagle is green\naxiom R7 : ∀ x : obj, Chases Tiger BaldEagle → Green BaldEagle\n\n-- Rule R8: If the bald eagle is young then the bald eagle needs the tiger\naxiom R8 : ∀ x : obj, Young BaldEagle → Needs BaldEagle Tiger\n\ntheorem not_visits_tiger_lion : ¬ Visits Tiger Lion :=\nbegin\n  have H1 : Needs BaldEagle Tiger := R8 BaldEagle A3,\n  have H2 : Visits BaldEagle Tiger := R4 BaldEagle H1,\n  have H3 : Visits Tiger Lion := R1 BaldEagle H2,\n  contradiction,\n  sorry,\nend\n\n-- Looks like the theorem cannot be proven in Lean.\n-- So let's try to prove the negation of the theorem, which is Tiger visits Lion\n\ntheorem visits_tiger_lion : Visits Tiger Lion :=\nbegin\n  have H1 : Needs BaldEagle Tiger := R8 BaldEagle A3,\n  have H2 : Visits BaldEagle Tiger := R4 BaldEagle H1,\n  have H3 : Visits Tiger Lion := R1 BaldEagle H2,\n  exact H3,\nend\n\n-- The negation of the theorem can be proven in Lean. So\n-- The answer is False",
    "output_tokens": 773,
    "pred_answer": "B",
    "gt_answer": "B",
    "problem_id": 86
}