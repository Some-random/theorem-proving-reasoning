{
    "input": "Textual context: Bob is furry. Bob is green. Charlie is furry. Charlie is kind. Charlie is young. Erin is green. Erin is kind. Fiona is blue. Fiona is furry. Fiona is smart. All young people are kind. Furry, cold people are young. Furry, blue people are smart. If someone is kind and furry then they are blue. If Bob is smart then Bob is furry. All furry, blue people are kind. If someone is furry then they are cold. If someone is young and furry then they are green.\nQuestion: Based on the above information, is the following statement true, false, or unknown? Erin is not kind.",
    "input_tokens": 2794,
    "output": "universe u\n\nconstant obj : Type u\n\nconstant Bob : obj\nconstant Charlie : obj\nconstant Erin : obj\nconstant Fiona : obj\n\nconstant Furry : obj → Prop\nconstant Green : obj → Prop\nconstant Kind : obj → Prop\nconstant Young : obj → Prop\nconstant Blue : obj → Prop\nconstant Smart : obj → Prop\nconstant Cold : obj → Prop\n\naxiom A1 : Furry Bob\naxiom A2 : Green Bob\naxiom A3 : Furry Charlie\naxiom A4 : Kind Charlie\naxiom A5 : Young Charlie\naxiom A6 : Green Erin\naxiom A7 : Kind Erin\naxiom A8 : Blue Fiona\naxiom A9 : Furry Fiona\naxiom A10 : Smart Fiona\n\n-- Rule R1: All young people are kind\naxiom R1 : ∀ x : obj, Young x → Kind x\n\n-- Rule R2: Furry, cold people are young\naxiom R2 : ∀ x : obj, Furry x ∧ Cold x → Young x\n\n-- Rule R3: Furry, blue people are smart\naxiom R3 : ∀ x : obj, Furry x ∧ Blue x → Smart x\n\n-- Rule R4: If someone is kind and furry then they are blue\naxiom R4 : ∀ x : obj, Kind x ∧ Furry x → Blue x\n\n-- Rule R5: If Bob is smart then Bob is furry\naxiom R5 : ∀ x : obj, Smart Bob → Furry Bob\n\n-- Rule R6: All furry, blue people are kind\naxiom R6 : ∀ x : obj, Furry x ∧ Blue x → Kind x\n\n-- Rule R7: If someone is furry then they are cold\naxiom R7 : ∀ x : obj, Furry x → Cold x\n\n-- Rule R8: If someone is young and furry then they are green\naxiom R8 : ∀ x : obj, Young x ∧ Furry x → Green x\n\ntheorem not_kind_Erin : ¬ Kind Erin :=\nbegin\n  have H1 : Kind Erin := A7,\n  contradiction,\n  sorry,\nend\n\n-- Looks like the theorem cannot be proven in Lean.\n-- So let's try to prove the negation of the theorem, which is Erin is kind\n\ntheorem kind_Erin : Kind Erin :=\nbegin\n  exact A7,\nend\n\n-- The negation of the theorem can be proven in Lean. So\n-- The answer is False",
    "output_tokens": 522,
    "pred_answer": "B",
    "gt_answer": "B",
    "problem_id": 169
}